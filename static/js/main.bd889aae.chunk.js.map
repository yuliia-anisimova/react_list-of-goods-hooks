{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversing","NONE","sortType","setSortingType","goodsToDisplay","goods","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","getReorderedGoods","isActiveReset","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAmCC,oBAAS,GAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAmCF,mBAASH,EAASM,MAArD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EA5CD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAgBzB,OAdIH,IAAaP,EAASY,UACxBD,EAAaE,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAGxBR,IAAaP,EAASiB,QACxBN,EAAaE,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUI,OAASH,EAAWG,UAG9Bd,GACFO,EAAaQ,UAGRR,EAwBgBS,CACrBnB,EACA,CAAEG,aAAYG,aAGVc,EAAiBjB,GAAcG,IAAaP,EAASM,KAE3D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAaP,EAASY,WAEpCa,QA5BsB,WAC5BjB,EAAeR,EAASY,WAsBpB,iCAUA,wBACEW,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAaP,EAASiB,SAEpCQ,QAlCoB,WAC1BjB,EAAeR,EAASiB,SA4BpB,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAapB,IAEfqB,QApDgB,WACtBpB,GAAcD,IA8CV,qBAUCiB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAjDa,WACrBpB,GAAa,GACbG,EAAeR,EAASM,OA4ClB,sBAUJ,6BACE,6BACGG,EAAeiB,KAAI,SAACC,GAAD,OAClB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC5HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd889aae.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((firstGood, secondGood) => (\n      firstGood.localeCompare(secondGood)));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((firstGood, secondGood) => (\n      firstGood.length - secondGood.length));\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversing] = useState(false);\n  const [sortType, setSortingType] = useState(SortType.NONE);\n\n  const handleReversing = () => {\n    setReversing(!isReversed);\n  };\n\n  const handleAlphabetSorting = () => {\n    setSortingType(SortType.ALPHABET);\n  };\n\n  const handleLengthSorting = () => {\n    setSortingType(SortType.LENGTH);\n  };\n\n  const handleReseting = () => {\n    setReversing(false);\n    setSortingType(SortType.NONE);\n  };\n\n  const goodsToDisplay = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  const isActiveReset = (isReversed || sortType !== SortType.NONE);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={handleAlphabetSorting}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={handleLengthSorting}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReversing}\n        >\n          Reverse\n        </button>\n\n        {isActiveReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReseting}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goodsToDisplay.map((good) => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}